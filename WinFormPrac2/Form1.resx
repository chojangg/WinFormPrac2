<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGIAAABQCAYAAADiF6CoAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAALoElEQVR4Xu2dCawdVRnHZRFZ
        ZBFQEaMIQVBAIcYoCMoiGtQSiSEIccPEUsCK7JtSAREMu6UCAkorFBFrKQWlYlm0KBFFCUtEBAXBsoog
        iCBQ/P2m37k5d97dpm9uefLmS365M99Z5sz3nzlz5px57Sv+32zSxInT4cUBODqKNDYMI8CNEGPBCHAj
        xFgwAtxPiEVwOzRCDNMIcC8hHo3f66ERYphGgHsJcTnsCadDI8QwjQD3EuJCuBZOgkaIqjZlypRXwxoD
        sAIB7iXEufAgnAFHk3/FUnmPI2X/StGU8W0E4jp4cQDsdnoJ8QTsDDeCQkhe/nGYBAdnPjk+mjK+jUDU
        JcR58AicCWUh7oKvwwOZ727YD3aPpoxvIxB1CTETroIToSzEIfAcfDX2n4IDY/v0aMr4NgJRlxBXw+Fw
        PpSFmAeKcWPsnwWPxHYjhEYg6hLiPlgQv2UhXoCF2f7Xsu1GCI1A1CXELJgGUyEX4nn4IsyEA8J3KjwZ
        240QGoGoS4h58GT85kL8ES6P7TPhaXgUUnojhEYg6nxG/ArOgvIdsTd8Hw4Kn/i8OBT2jaaMbyMQdQlx
        E3wLLoVcCFkED4J3wz3hE0dSB0dTxrcRiLqE+Dk4vTEXykIkfG+YBtdnvqZr0ghEXUI8D8/B/dBNCLsi
        h7G3wTlwATRCaASiLiF+CXZN34NuQohDWac7poJv2ydHU8a3EYi6hFCEyeBURy8hEjPgh9DcERqBqEsI
        p8Cda5oNgwiRaITQCERdQlwJR8JF0AhR1QhEXUK4MPQbcBjbCFHVCESdQrhMWp7i6EcjhEYg6hLiClgI
        d0AjRFUjEHUJMR98ofNZ0QhR1QhEXUI4z+SnNM7CNkJUNQKRhDgKnJxzTXk6PAx5wPoJcRn4MnccNEJU
        NQJxFewDEyIwci84J+Tc0J3h6yeEXZITfnZRjRBVjUDsCzdAp8A5HeHUtTOm/YTwRc6FofI0eD8aITQC
        8X64GG6NwJR5FraHzQlwLyEugRlQfOlH/kaIKkYgToIvZYEpcwvMgn53hN81KYRfcjRCVDUCMQdOyAJT
        xk9gvCv6CXE2fBea4euSGIH4DPixV6cguYJ2WGwrxMqwxgD4WWUjRBUjENuWApMzF9K3SHtGkYGM/I0Q
        VYxA+GlLpwCJw9e03QgxTCMQu8P+4GrZ7yAFyE9eTsn2GyGGaQTiygjIM3AZ+DHYfDgD8o+GGyGGaQRi
        L3D46tWf3qIvga3gGHCB/z5ohBimEYg01/QYXAgTwa8sUqAcUZ0Nm0aRgYz8jRBVjECUZ1+d1jgX/E51
        Mjhy8gOx5o4YphGInn+6FXlWgRWKAgMa+ct/otWN5k+3GmusscYaa6yxxl6etsduu70O5mScFkmjMurZ
        vVTvmPjbZ9qxWaldR0TSS2s05C3wYsbNkTQqo56jS/X2/Lc0SF8Htst4WyTValF33q45kVSvUfF1Fdgw
        illuf7BhtQiRLI4ziBB7Rr7E9EjqauQ5Dsrn1I22t233weOMEAJfuZcYlOOiiqKS/GT6sUUUs1xfIUhb
        Bj4Ol8Ad8BdYAEfB2pGtzfAbBOvtJ8QmYBueifwXR1JXI48nn86lH9dFscLY7yVEuZcYlLZj5Ae5HvLb
        XSZAKjiwEPhXgZ9FHnkaHs72/wHbRvaW4RtICI08b4y8cku4exr5tsjKeG7l8020zlVjv5cQK0KnOrox
        HayrqxCdDrJGpEkVIWZH+r3wUVgu/G+GGWDaE7B+USCM/SpClJ8rW0ZSVyNPLkQxjzWIkbdrjKoadaR2
        D1cIfO+JtP/CiIcoPrusKyPPOeEujP1BuyaP8Z/Ie1v8/gnWjCwdjfSXrRCevCdXEGlfAdMuLzJ3MNI+
        EnkWhqsw9vsKQdr28HjkuwjWhnti/yZYL7KOMNIG6Zo2hOVLvllgmTqFmBeuxYZjNEK0EWmnxf7UInMH
        I+0dkacok4z9rkLgey1Mg0WR50dQTI3za/DuCv8/YV8YMW2OLxeiG8YjP++cOoQ4NuqaHa7FhmM0QjwF
        Bq8g0g4G064pMncw0naJPA+EqzD224Tg9zXgy55Xfhoh2SUdCMsUhcLYN2+6cuU++CbsAEVefnMhHJy0
        2p4xGRxs5EPNu8EyAwlBvi3BGO0arpbhS/FuH3JnCUsiRKdnxFshXbXbhbtl+JaDGyJ9RrgLY99A6E9C
        rAv/Dp91XgwbFJm7GOl2ObeDZaTVF7OdCzG0ZwT5Oj8HMHxp1DQtXIsNR61CaPhTnf+CvWB1eCV4pVwN
        phngjaNIYey3CaGx7dV/IrReKPsZeR0QfAy8mlujKbbHghBzI+3YcC02HMMQwqv+O5GnE4/BhyN7y/CN
        EKJOo96xIMTvI23vcC02HOkgvv1aQY59rGkysBDJSPcOOBduhFvBYethsFZkaTP8S1MIz618vm1EsTxG
        dQhhLHzBbe+2caSD9KOyEFWN+pamEH2JYnmMRi1EMtKKl9yW4dgpCvZjnShimaUiBL9O7nVqS1V2ivqc
        te2U3hHLaGyPEIJtu+38XSMnPZBvznxdiSqrG4WXlhBpf7SM6tsly0c9uRAGsXycJSKqrG4UXlpC7Aoe
        a7SMmGCsYpTvJER50WiJiSqrG4U9uaELMVaM9lR6Riw1o0GNEGPBaFAjxFgwGrQPOAO6IFy1GPVdEfUe
        Hq4xYbTnhGjXzHA11lgH4wppfynJjLS2aWj2l4/NNutTR9e0XuaxYdnYHWGkrQRts7cvudGgk8G++Qvh
        0rcaODmn37XhCbFd5mxYE+bDkVHWRZ+0NuCr/E/h83AIdKrDmdj3lnwJh3euCbv0mvt/AsfAykWDw9h3
        SPlb8NiuEP4aDgAD7/zXFPg7mP4sXAqbgxOSnsuPYcWozvq+AVfBarHvlLpxeQQeAj+MyL9uWR+csvcY
        zqf9Aj4UaauC7e78H4eQkN4C/wBp3v7T4UuLPenlxRPxbTexR6Tbf6axvx8GzIR3wwfBBRwfdgqUylmX
        QXbbQKWph6nhS0yMOn1Ddf0g+RX1eTjM9GTsXwMK8QHYFjzu1ZF2PHgM55i2Btt2AbiubpBsT9vgg33L
        Px7bW8Fz4EcRXpifgjvhQXDRyvUQ10C8CE0zj3NrL8D2UYcriZ1fLklQiPSFxSfhVWCBhfoiTxLCdIP2
        LtioqABjuxACvLK80gzaQfAJWA9Wj6yFsW9drZER20mIJIpsEsmmK0RrIYXt14PHPDVchbF/Czi5+GXY
        Gd4ELqUuC067nx9ZW4bv7fGrEG1Lv+AFlYTwbjEurS6Xbc/NdZLDwQUlz6E1tc+2d6FiFcui/PYVwtvd
        1a0/g7OjilCsPUeeJMSTYAD8AmOXogIsfOmOmATeuuaXoqFFxrDwdxLCYFmX7B/JpitEqi9h0MrrGa78
        eUfm+b4NCuf2pMg6wkhTCK/edHzxokpC2IYRw1d8XsR2a627Jzd8LmbdEdsDCbExeLvbGG//4l0h8iQh
        8hnYot/U2LbRSYh3xq+3q32/t+dD+pKxb12dhMjFzes3CF4ofsx1BNjG90Vyy/BtAF6F9tX25xeC9brS
        5yJV24qghm+z+O3XNfk8Kd8RG4H1e/fvF9utL1fYtof4KxQfUvDbX4jYPgf8EsJbORfC/tSDlJ8RxeIG
        v4UQYD/p3XIeuNb8OfDgbdPB7FtXJyHKz4jiX7Lnt9U18evq27XgOvKq+pKxb9u9OneEbcD+3LY5ivLh
        7jFOAZ8fzjr/AO4HByf9hHBtxQGAAxPvvM+Cazg+mNcCZ2P/Bn7RaJpfOTpQ8eLeJuowFj7883Nc3Fuw
        YcN80vsJyRtg6/ArhHeK/awHTiOWHK8S+2Ab56eUNsaJOv32jXZ158O6xcEwtj2GZVv/XQDbnmS5bnFE
        5YjH+lprvGx7tZuei2mwJ4bf0ZpdoqthadSigIeCwVIQu0EHEpuCd9EgoybF9VztjhTQuLU+kmPbD+i8
        C01zVOUIa4dIU2yFyc8Pdrv5f+bs9I1uNwK1AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAwAAAAQAAAACAAAAAgAAAAQAAAACAAAAAwAAAAQAAAAEAAAAAgAA
        AAEAAAACAAAACgAAAAUAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAADwAAABJAAAAUAAAADQAAABIAAAAUgAAADMAAABYAAAAUgAA
        AE0AAAA0AAAAQAAAAEEAAABaAAAAVQAAAEYAAAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAARAAAAEYAAABVAAAAUAAAAGAAAABOAAAAPwAA
        AGMAAAA6AAAASQAAAEsAAABcAAAAVQAAAEcAAAAWAAAAFgAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAoAAAAKgAAACwAAAA1AAAAMAAA
        ADAAAAAuAAAAJwAAACIAAAAqAAAAKwAAADMAAAA2AAAAIAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAABAAAAAQAA
        AAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAGoAAABoAAAAaAAAAGgAAABoAAAAZwAA
        AHUAAAB1AAAAZwAAAGgAAABoAAAAaAAAAGgAAABqAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAFgAAABYAAAATAAAAFQAA
        ABwAAAAWAAAAUQAAAFEAAAAWAAAAHAAAABUAAAATAAAAFgAAABYAAAANAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADAAAACRAAAAtwAAAKkAAACnAAAApwAAAKkAAAC3AAAAkQAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAwAAAA1wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA1wAAAC8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAJUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAlQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAASAAAAzgAAAP8AAAD/AAAA/wAAAP8AAADwAAAA8AAAAP8AAAD/AAAA/wAA
        AP8AAADNAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAADcAAAA/wAAAP8AAAD/AAAA3wAAAIcAAACHAAAA3wAA
        AP8AAAD/AAAA/wAAANwAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAFEAAACPAAAAowAAAIgAAAAvAAAARgAA
        AEYAAAAwAAAAiAAAAKMAAACPAAAAUQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        AF0AAADFAAAAxQAAAF0AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABiAAAA9gAAAP8AAAD/AAAA9gAAAGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABwAAALcAAAD/AAAA/wAAAP8AAAD/AAAAtgAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMAAAAxgAAAP8AAAD/AAAA/wAAAP8AAADGAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAADlAAAA/wAAAP8AAAD/AAAA/wAAAOUAAAA8AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApAAAAmAAAAL8AAACWAAAAlgAA
        AL8AAACXAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAYgAA
        AAAAAAAAAAAAYgAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAwAAAABAAAAAAAA
        AAwAAAAnAAAACgAAAAUAAAAnAAAADAAAAAAAAAAFAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAlwAA
        ACIAAAAAAAAAAAAAAAAAAAByAAAAXAAAAAAAAAAAAAAAAAAAADIAAACPAAAACwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAsAAADCAAAAiQAAAAEAAAAAAAAAAAAAAHMAAADOAAAAGwAAAAAAAAAAAAAAJwAAAN0AAABXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABLAAAAgAAAANYAAADoAAAAMwAAACAAAAB2AAAAqQAAAP0AAAB8AAAABwAAAGEAAACJAAAA7QAA
        AMcAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAHUAAAD/AAAA/wAAAP8AAACgAAAAMgAAAOMAAAD/AAAA/wAAAOEAAAAxAAAApAAA
        AP8AAAD/AAAA/gAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGQAAAMsAAADuAAAAkQAAAGgAAAAIAAAAgQAAAP4AAACvAAAAfwAA
        ACIAAAA3AAAA6gAAANgAAACIAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAN0AAAAmAAAAAAAAAAAAAAAdAAAA0QAA
        AHEAAAAAAAAAAAAAAAIAAACNAAAAwQAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAlAAAADMAAAAAAAAAAAAA
        AAAAAABgAAAAdAAAAAAAAAAAAAAAAAAAACQAAACbAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAABwAA
        AAAAAAAAAAAAAAAAAAcAAAAOAAAAAAAAAAAAAAAAAAAAAQAAABEAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4AAP/8AAD//AAA//wAA//////////////wAA//8AAP//AAD//+AH///A
        A///gAH//4AB//+AAf//gAH///gf///4H///8A////AP///wD///8A////AP///5n///iBP//45x//+G
        Mf//AAD//wAA//8AAP//jGH//45x///Ocf8=
</value>
  </data>
</root>